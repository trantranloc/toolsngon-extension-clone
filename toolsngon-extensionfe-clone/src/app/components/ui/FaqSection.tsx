'use client';

import { useState } from 'react';

const faqItems = [
  {
    title: 'Tools Ngon L√† G√¨?',
    content:
      'Tools Ngon cung c·∫•p quy·ªÅn truy c·∫≠p v√†o c√°c c√¥ng c·ª• v·ªõi m·ª©c gi√° c·ª±c r·∫ª. T·∫•t c·∫£ nh·ªØng g√¨ b·∫°n c·∫ßn l√†m l√† nh·∫•p v√†o mua ngay ·ªü tr√™n v√† tham gia Tools Ngon, n∆°i b·∫°n s·∫Ω ƒë∆∞·ª£c cung c·∫•p t√†i kho·∫£n cao c·∫•p c·ªßa t·∫•t c·∫£ c√°c c√¥ng c·ª•.',
  },
  {
    title: 'T√πy ch·ªçn thanh to√°n n√†o??',
    content:
      'G√≥i t·ª± ƒë·ªông c√≥ th·ªÉ ƒë∆∞·ª£c ƒëƒÉng k√Ω b·∫±ng m√£ QR/th·∫ª t√≠n d·ª•ng/th·∫ª ghi n·ª£. Nh∆∞ng ch√∫ng t√¥i h·ªó tr·ª£ paypal, wise, ti·ªÅn ƒëi·ªán t·ª≠.',
  },
  {
    title: 'Tools c√≥ h·∫øt Credit?',
    content:
      'Ch√∫ng t√¥i s·∫Ω h·∫øt t√≠n d·ª•ng trong v√≤ng 1-7 ng√†y tr√™n Minea. C√°c c√¥ng c·ª• c√≤n l·∫°i lu√¥n ho·∫°t ƒë·ªông ho√†n h·∫£o. N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, h√£y tho·∫£i m√°i m·ªü m·ªôt phi·∫øu trong #support.',
  },
  {
    title: 'T√¥i c√≥ th·ªÉ h·ªßy ƒêƒÉng k√Ω c·ªßa m√¨nh kh√¥ng?',
    content:
      'N·∫øu b·∫°n mu·ªën h·ªßy ƒëƒÉng k√Ω sau n√†y, vui l√≤ng m·ªü phi·∫øu trong üé´„Ä°support v√† ch√∫ng t√¥i s·∫Ω tr·∫£ l·ªùi s·ªõm nh·∫•t c√≥ th·ªÉ. Khi h·ªßy ƒëƒÉng k√Ω, ƒëƒÉng k√Ω s·∫Ω kh√¥ng ƒë∆∞·ª£c gia h·∫°n nh∆∞ng b·∫°n v·∫´n c√≥ quy·ªÅn l·ª£i ho·∫°t ƒë·ªông cho ƒë·∫øn khi b·∫°n s·ª≠ d·ª•ng h·∫øt s·ªë ng√†y c√≤n l·∫°i ƒë√£ thanh to√°n.',
  },
  {
    title: 'Tools Ngon ho·∫°t ƒë·ªông th·∫ø n√†o th·∫ø?',
    content:
      'Ch√∫ng t√¥i c√≥ ph·∫ßn m·ªÅm t√πy ch·ªânh cho ph√©p b·∫°n t·ª± ƒë·ªông ƒëƒÉng nh·∫≠p v√†o t·∫•t c·∫£ c√°c c√¥ng c·ª•, b·∫°n s·∫Ω s·ª≠ d·ª•ng Google Chrome ch·ª© kh√¥ng ph·∫£i ch·∫ø ƒë·ªô ·∫©n danh.',
  },
];

export default function FaqSection() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const toggle = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section className="py-16 relative container mx-auto px-4 lg:px-0">
      <div className="mx-auto text-center">
        <div className="text-slate-900 dark:text-slate-200 text-4xl mb-12">
          C√°c <span className="text-blue-500">C√¢u H·ªèi</span> Th∆∞·ªùng G·∫∑p
        </div>
      </div>
      <div className="w-full relative mt-12 overflow-hidden border rounded-2xl border-slate-200 dark:border-slate-800 bg-white">
        {faqItems.map((item, index) => (
          <div
            key={index}
            className={`overflow-hidden dark:text-slate-400 ${
              index + 1 < faqItems.length ? 'border-b border-slate-200' : ''
            }`}
          >
            <div onClick={() => toggle(index)}>
              <button
                type="button"
                className={`flex items-center justify-between w-full p-5 gap-3 text-xl ${
                  openIndex === index
                    ? 'bg-blue-500 text-white'
                    : 'text-slate-500 hover:bg-slate-50 dark:hover:bg-slate-800'
                }`}
              >
                <span className="text-left">{item.title}</span>
                <svg
                  className={`w-3 h-3 shrink-0 transition-transform duration-300 ${
                    openIndex === index ? '' : 'rotate-180'
                  }`}
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 10 6"
                >
                  <path
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    d="M9 5 5 1 1 5"
                  />
                </svg>
              </button>
            </div>
            {openIndex === index && (
              <div className="p-5 dark:border-slate-700 dark:bg-slate-900 border-t border-slate-200">
                <p className="mb-2 text-slate-500 dark:text-slate-400">{item.content}</p>
              </div>
            )}
          </div>
        ))}
      </div>
    </section>
  );
}
